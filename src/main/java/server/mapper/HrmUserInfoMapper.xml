<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="server.dao.HrmUserInfoMapper">
  <resultMap id="BaseResultMap" type="server.model.HrmUserInfo">
    <result column="id" jdbcType="CHAR" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="bigheadurl" jdbcType="VARCHAR" property="bigheadurl" />
    <result column="smallheadurl" jdbcType="VARCHAR" property="smallheadurl" />
    <result column="userlevel" jdbcType="VARCHAR" property="userlevel" />
    <result column="usertype" jdbcType="SMALLINT" property="usertype" />
    <result column="lastlogintime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="loginpassword" jdbcType="VARCHAR" property="loginpassword" />
    <result column="paypwd" jdbcType="VARCHAR" property="paypwd" />
    <result column="points" jdbcType="INTEGER" property="points" />
    <result column="lnd" jdbcType="VARCHAR" property="lnd" />
    <result column="lat" jdbcType="VARCHAR" property="lat" />
    <result column="maxcontinuenumber" jdbcType="SMALLINT" property="maxcontinuenumber" />
    <result column="curcontinuenumber" jdbcType="SMALLINT" property="curcontinuenumber" />
    <result column="registrationtype" jdbcType="VARCHAR" property="registrationtype" />
    <result column="viplevel" jdbcType="CHAR" property="viplevel" />
    <result column="citycode" jdbcType="CHAR" property="citycode" />
    <result column="invitationcode" jdbcType="VARCHAR" property="invitationcode" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="machineid" jdbcType="VARCHAR" property="machineid" />
    <result column="registername" jdbcType="VARCHAR" property="registername" />
    <result column="userstate" jdbcType="INTEGER" property="userstate" />
    <result column="blockid" jdbcType="INTEGER" property="blockid" />
    <result column="channelid" jdbcType="CHAR" property="channelid" />
    <result column="qmcoin" jdbcType="DOUBLE" property="qmcoin" />
    <result column="qrcode" jdbcType="VARCHAR" property="qrcode" />
    <result column="rong_token" jdbcType="VARCHAR" property="rong_token" />
    <result column="manager" jdbcType="INTEGER" property="manager" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, nickname, mobile, email, bigheadurl, smallheadurl, userlevel, usertype, lastlogintime, 
    createtime, loginpassword, paypwd, points, lnd, lat, maxcontinuenumber, curcontinuenumber, 
    registrationtype, viplevel, citycode, invitationcode, username, machineid, registername, 
    userstate, blockid, channelid, qmcoin, qrcode, rong_token, manager
  </sql>
  <select id="selectByExample" parameterType="server.model.HrmUserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hrm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="server.model.HrmUserInfoExample">
    delete from hrm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="server.model.HrmUserInfo">
    insert into hrm_userinfo (id, nickname, mobile, 
      email, bigheadurl, smallheadurl, 
      userlevel, usertype, lastlogintime, 
      createtime, loginpassword, paypwd, 
      points, lnd, lat, maxcontinuenumber, 
      curcontinuenumber, registrationtype, viplevel, 
      citycode, invitationcode, username, 
      machineid, registername, userstate, 
      blockid, channelid, qmcoin, 
      qrcode, rong_token, manager
      )
    values (#{id,jdbcType=CHAR}, #{nickname,jdbcType=VARCHAR}, #{mobile,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{bigheadurl,jdbcType=VARCHAR}, #{smallheadurl,jdbcType=VARCHAR}, 
      #{userlevel,jdbcType=VARCHAR}, #{usertype,jdbcType=SMALLINT}, #{lastlogintime,jdbcType=TIMESTAMP}, 
      #{createtime,jdbcType=TIMESTAMP}, #{loginpassword,jdbcType=VARCHAR}, #{paypwd,jdbcType=VARCHAR}, 
      #{points,jdbcType=INTEGER}, #{lnd,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, #{maxcontinuenumber,jdbcType=SMALLINT}, 
      #{curcontinuenumber,jdbcType=SMALLINT}, #{registrationtype,jdbcType=VARCHAR}, #{viplevel,jdbcType=CHAR}, 
      #{citycode,jdbcType=CHAR}, #{invitationcode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{machineid,jdbcType=VARCHAR}, #{registername,jdbcType=VARCHAR}, #{userstate,jdbcType=INTEGER}, 
      #{blockid,jdbcType=INTEGER}, #{channelid,jdbcType=CHAR}, #{qmcoin,jdbcType=DOUBLE}, 
      #{qrcode,jdbcType=VARCHAR}, #{rong_token,jdbcType=VARCHAR}, #{manager,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="server.model.HrmUserInfo">
    insert into hrm_userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="bigheadurl != null">
        bigheadurl,
      </if>
      <if test="smallheadurl != null">
        smallheadurl,
      </if>
      <if test="userlevel != null">
        userlevel,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="lastlogintime != null">
        lastlogintime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="loginpassword != null">
        loginpassword,
      </if>
      <if test="paypwd != null">
        paypwd,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="lnd != null">
        lnd,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="maxcontinuenumber != null">
        maxcontinuenumber,
      </if>
      <if test="curcontinuenumber != null">
        curcontinuenumber,
      </if>
      <if test="registrationtype != null">
        registrationtype,
      </if>
      <if test="viplevel != null">
        viplevel,
      </if>
      <if test="citycode != null">
        citycode,
      </if>
      <if test="invitationcode != null">
        invitationcode,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="machineid != null">
        machineid,
      </if>
      <if test="registername != null">
        registername,
      </if>
      <if test="userstate != null">
        userstate,
      </if>
      <if test="blockid != null">
        blockid,
      </if>
      <if test="channelid != null">
        channelid,
      </if>
      <if test="qmcoin != null">
        qmcoin,
      </if>
      <if test="qrcode != null">
        qrcode,
      </if>
      <if test="rong_token != null">
        rong_token,
      </if>
      <if test="manager != null">
        manager,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bigheadurl != null">
        #{bigheadurl,jdbcType=VARCHAR},
      </if>
      <if test="smallheadurl != null">
        #{smallheadurl,jdbcType=VARCHAR},
      </if>
      <if test="userlevel != null">
        #{userlevel,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=SMALLINT},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginpassword != null">
        #{loginpassword,jdbcType=VARCHAR},
      </if>
      <if test="paypwd != null">
        #{paypwd,jdbcType=VARCHAR},
      </if>
      <if test="points != null">
        #{points,jdbcType=INTEGER},
      </if>
      <if test="lnd != null">
        #{lnd,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="maxcontinuenumber != null">
        #{maxcontinuenumber,jdbcType=SMALLINT},
      </if>
      <if test="curcontinuenumber != null">
        #{curcontinuenumber,jdbcType=SMALLINT},
      </if>
      <if test="registrationtype != null">
        #{registrationtype,jdbcType=VARCHAR},
      </if>
      <if test="viplevel != null">
        #{viplevel,jdbcType=CHAR},
      </if>
      <if test="citycode != null">
        #{citycode,jdbcType=CHAR},
      </if>
      <if test="invitationcode != null">
        #{invitationcode,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="machineid != null">
        #{machineid,jdbcType=VARCHAR},
      </if>
      <if test="registername != null">
        #{registername,jdbcType=VARCHAR},
      </if>
      <if test="userstate != null">
        #{userstate,jdbcType=INTEGER},
      </if>
      <if test="blockid != null">
        #{blockid,jdbcType=INTEGER},
      </if>
      <if test="channelid != null">
        #{channelid,jdbcType=CHAR},
      </if>
      <if test="qmcoin != null">
        #{qmcoin,jdbcType=DOUBLE},
      </if>
      <if test="qrcode != null">
        #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="rong_token != null">
        #{rong_token,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="server.model.HrmUserInfoExample" resultType="java.lang.Long">
    select count(*) from hrm_userinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hrm_userinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.bigheadurl != null">
        bigheadurl = #{record.bigheadurl,jdbcType=VARCHAR},
      </if>
      <if test="record.smallheadurl != null">
        smallheadurl = #{record.smallheadurl,jdbcType=VARCHAR},
      </if>
      <if test="record.userlevel != null">
        userlevel = #{record.userlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null">
        usertype = #{record.usertype,jdbcType=SMALLINT},
      </if>
      <if test="record.lastlogintime != null">
        lastlogintime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginpassword != null">
        loginpassword = #{record.loginpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.paypwd != null">
        paypwd = #{record.paypwd,jdbcType=VARCHAR},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.lnd != null">
        lnd = #{record.lnd,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.maxcontinuenumber != null">
        maxcontinuenumber = #{record.maxcontinuenumber,jdbcType=SMALLINT},
      </if>
      <if test="record.curcontinuenumber != null">
        curcontinuenumber = #{record.curcontinuenumber,jdbcType=SMALLINT},
      </if>
      <if test="record.registrationtype != null">
        registrationtype = #{record.registrationtype,jdbcType=VARCHAR},
      </if>
      <if test="record.viplevel != null">
        viplevel = #{record.viplevel,jdbcType=CHAR},
      </if>
      <if test="record.citycode != null">
        citycode = #{record.citycode,jdbcType=CHAR},
      </if>
      <if test="record.invitationcode != null">
        invitationcode = #{record.invitationcode,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.machineid != null">
        machineid = #{record.machineid,jdbcType=VARCHAR},
      </if>
      <if test="record.registername != null">
        registername = #{record.registername,jdbcType=VARCHAR},
      </if>
      <if test="record.userstate != null">
        userstate = #{record.userstate,jdbcType=INTEGER},
      </if>
      <if test="record.blockid != null">
        blockid = #{record.blockid,jdbcType=INTEGER},
      </if>
      <if test="record.channelid != null">
        channelid = #{record.channelid,jdbcType=CHAR},
      </if>
      <if test="record.qmcoin != null">
        qmcoin = #{record.qmcoin,jdbcType=DOUBLE},
      </if>
      <if test="record.qrcode != null">
        qrcode = #{record.qrcode,jdbcType=VARCHAR},
      </if>
      <if test="record.rong_token != null">
        rong_token = #{record.rong_token,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hrm_userinfo
    set id = #{record.id,jdbcType=CHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      bigheadurl = #{record.bigheadurl,jdbcType=VARCHAR},
      smallheadurl = #{record.smallheadurl,jdbcType=VARCHAR},
      userlevel = #{record.userlevel,jdbcType=VARCHAR},
      usertype = #{record.usertype,jdbcType=SMALLINT},
      lastlogintime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      loginpassword = #{record.loginpassword,jdbcType=VARCHAR},
      paypwd = #{record.paypwd,jdbcType=VARCHAR},
      points = #{record.points,jdbcType=INTEGER},
      lnd = #{record.lnd,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      maxcontinuenumber = #{record.maxcontinuenumber,jdbcType=SMALLINT},
      curcontinuenumber = #{record.curcontinuenumber,jdbcType=SMALLINT},
      registrationtype = #{record.registrationtype,jdbcType=VARCHAR},
      viplevel = #{record.viplevel,jdbcType=CHAR},
      citycode = #{record.citycode,jdbcType=CHAR},
      invitationcode = #{record.invitationcode,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      machineid = #{record.machineid,jdbcType=VARCHAR},
      registername = #{record.registername,jdbcType=VARCHAR},
      userstate = #{record.userstate,jdbcType=INTEGER},
      blockid = #{record.blockid,jdbcType=INTEGER},
      channelid = #{record.channelid,jdbcType=CHAR},
      qmcoin = #{record.qmcoin,jdbcType=DOUBLE},
      qrcode = #{record.qrcode,jdbcType=VARCHAR},
      rong_token = #{record.rong_token,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>